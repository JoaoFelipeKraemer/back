GROUP BY e HAVING

Os resultados de uma query podem ser agrupados por uma ou mais colunas usando o GROUP BY,
 o que faz com que todos os registros que têm o mesmo valor para tais colunas sejam exibidos juntos. 
 O GROUP BY também pode ser usado em conjunto com as funções de agregação que vimos anteriormente.

 SINTAXE :
 SELECT coluna(s) FROM tabela
GROUP BY coluna(s);

exemplo:
SELECT first_name FROM sakila.actor
GROUP BY first_name;

É DIFERENTE DE: 

SELECT first_name FROM sakila.actor;

GROUP BY RETIRA DUPLICADAS.

é mais comum utilizar o GROUP BY em conjunto com o AVG, MIN, MAX, SUM ou COUNT. 
Por exemplo, caso queiramos saber quantos registros existem na tabela de cada nome registrado, podemos usar o COUNT().
 Assim, teremos uma informação mais fácil de ser compreendida.

SELECT first_name, COUNT(*) FROM sakila.actor
GROUP BY first_name;

 Também podemos utilizar o GROUP BY para agrupar os registros pelos valores de mais de uma coluna.
 QUANTOS PG A 0.99 TEM?
 QUANTOS PG A 2.99 TEM? 
 E ASSIM POR DIANTE.

 SELECT rating, rental_rate, COUNT(1) as total FROM sakila.film
GROUP BY rating, rental_rate 
ORDER BY rating, rental_rate;


-- Média de duração de filmes agrupados por classificação indicativa
SELECT rating, AVG(length)
FROM sakila.film
GROUP BY rating;

SELECT rating, MIN(replacement_cost)
FROM sakila.film
GROUP BY rating;

-- Valor máximo de substituição dos filmes agrupados por classificação indicativa
SELECT rating, MAX(replacement_cost)
FROM sakila.film
GROUP BY rating;

-- Custo total de substituição de filmes agrupados por classificação indicativa
SELECT rating, SUM(replacement_cost)
FROM sakila.film
GROUP by rating;
===================

FIXANDO

Monte uma query que exiba a quantidade de clientes cadastrados na tabela sakila.customer que estão ativos e a quantidade que estão inativos.

SELECT active, COUNT(*)
FROM sakila.customer
GROUP BY active;

Monte uma query para a tabela sakila.customer que exiba a quantidade de clientes ativos e inativos por loja. 
Os resultados devem conter o ID da loja, o status dos clientes (ativos ou inativos) e a quantidade de clientes por status.

SELECT store_id, active, COUNT(*)
FROM sakila.customer
GROUP BY store_id, active;

Monte uma query que exiba a média de duração de locação por classificação indicativa (rating) dos filmes cadastrados
 na tabela sakila.film. Os resultados devem ser agrupados pela classificação indicativa e ordenados da maior média para a menor.

SELECT AVG(rental_duration) AS avg_rental_duration, rating
FROM sakila.film
GROUP BY rating
ORDER BY avg_rental_duration DESC;


Monte uma query para a tabela sakila.address que exiba o nome do distrito e a quantidade de endereços registrados nele. 
Os resultados devem ser ordenados da maior quantidade para a menor.

SELECT district, COUNT(*)
FROM sakila.address
GROUP BY district
ORDER BY COUNT(*) DESC;

=================
GROUP_CONCAT(email), store_id FROM sakila.customer GROUP BY store_id;

SELECT ROUND(AVG(rental_rate), 2) AS media, rating FROM .. GROIUP BY rating

o q n estiver no GROUP BY tem q estar agregado no SELECT