Você precisa encontrar um conjunto de registros, mas não tem certeza se uma das colunas de referência envolvidas
 possui ou não essa informação. Para que você encontre registros nessa situação,
  podemos usar o LEFT JOIN ou RIGHT JOIN


 LEFT = 620 ROWS
LEFT JOIN: quando utilizamos o LEFT JOIN, focamos a tabela da esquerda. São retornados todos os registros 
da tabela da esquerda e valores correspondentes da tabela da direita, caso existam. 
Valores que não possuem correspondentes são exibidos como nulos.





  SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    a.actor_id,
    a.first_name,
    a.last_name
FROM sakila.customer AS c
LEFT JOIN sakila.actor AS a
ON c.last_name = a.last_name
ORDER BY c.last_name;

RIGHT = 200 ROWS

RIGHT JOIN: quando utilizamos o RIGHT JOIN, focamos a tabela da direita. São retornados todos os 
registros da tabela da direita e valores correspondentes da tabela da esquerda, caso existam.
 Valores que não possuem correspondentes são exibidos como nulos.


SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    a.actor_id,
    a.first_name,
    a.last_name
FROM sakila.customer AS c
RIGHT JOIN sakila.actor AS a
ON c.last_name = a.last_name
ORDER BY c.last_name;

INNER = 43 ROWS


INNER JOIN: finalmente, temos o INNER JOIN, que foca em trazer somente os registros que possuem
 valores correspondentes em ambas as tabelas.

SELECT
    c.customer_id,
    c.first_name,
    c.last_name,
    a.actor_id,
    a.first_name,
    a.last_name
FROM sakila.customer AS c
INNER JOIN sakila.actor AS a
ON c.last_name = a.last_name
ORDER BY c.last_name;



Até o momento, temos usado mais de uma tabela para analisar dados e gerar informação. No entanto, a informação a 
ser analisada pode estar concentrada em apenas uma tabela. 
Nesse cenário, o SELF JOIN pode ser usado para criar resultados relevantes.